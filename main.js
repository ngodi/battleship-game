!(function (e) { const t = {}; function a(n) { if (t[n]) return t[n].exports; const r = t[n] = { i: n, l: !1, exports: {} }; return e[n].call(r.exports, r, r.exports, a), r.l = !0, r.exports; }a.m = e, a.c = t, a.d = function (e, t, n) { a.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n }); }, a.r = function (e) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 }); }, a.t = function (e, t) { if (1 & t && (e = a(e)), 8 & t) return e; if (4 & t && typeof e === 'object' && e && e.__esModule) return e; const n = Object.create(null); if (a.r(n), Object.defineProperty(n, 'default', { enumerable: !0, value: e }), 2 & t && typeof e !== 'string') for (const r in e)a.d(n, r, ((t) => e[t]).bind(null, r)); return n; }, a.n = function (e) { const t = e && e.__esModule ? function () { return e.default; } : function () { return e; }; return a.d(t, 'a', t), t; }, a.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }, a.p = '', a(a.s = 0); }([function (e, t, a) {
  a.r(t); const n = { displayBoard: (e, t) => { let a; let n = 0; let r = ''; for (let d = 0; d < 10; d++) { a = '<tr>'; for (let r = 0; r < 10; r++)e[n] !== null ? /X/.test(e[n]) ? a += t === 'playerBoard' ? `<td class='hit green'>${e[n].match(/X/)[0]}</td>` : `<td id=${n}></td>` : /O/.test(e[n]) ? a += t === 'playerBoard' ? `<td class='miss'>${e[n].match(/O/)[0]}</td>` : `<td id=${n} class='miss'></td>` : a += t === 'playerBoard' ? "<td class='green'></td>" : `<td id=${n}></td>` : a += t === 'playerBoard' ? '<td></td>' : `<td id=${n}></td>`, n++; a += '</tr>', r += a; }document.getElementById(`${t}`).innerHTML = r; }, getPlacement: () => ({ ship: document.getElementById('ship').value, position: document.getElementById('position').value, direction: document.getElementById('direction').value }), showMessage: (e) => { document.getElementById('message-section').innerHTML = e; } }; const r = (e, t) => {
    const a = new Array(e).fill(t); return {
      len: e, isSunk: () => a.every((e) => e === 'X'), hit: (e) => a[e] = 'X', cha: t,
    };
  }; const d = () => {
    const e = {
      c: 'carrier', b: 'battleship', cr: 'cruiser', s: 'submarine', d: 'destroyer',
    }; const t = []; const a = r(5, 'c'); const n = r(4, 'b'); const d = r(3, 'cr'); const i = r(3, 's'); const l = r(2, 'd'); let o = [a, n, d, i, l]; const s = new Array(100).fill(null); const c = (e, t, a, n) => { const { len: r } = e; const d = ((e) => { const t = [9, 19, 29, 39, 49, 59, 69, 79, 89, 99]; for (let a = 0; a < t.length; a += 1) if (t[a] >= e) return t[a]; })(t); if (n === 'down') { let e = 0; for (let n = 0; n < r; n += 1) { if (a[t + e] !== null) return !1; e += 10; } } else if (n === 'right') { for (let e = 0; e < r; e += 1) if (a[t + e] !== null) return !1; if (t + (r - 1) > d) return !1; } return !0; }; return {
      validatePlacement: c, placeShip: (e, a, n, r) => { const d = c(e, a, n, r); let i = ''; if (t.includes(e))i = 'ship placed already'; else if (!0 !== d || t.includes(e))!1 === d && (i = 'Invalid position'); else { const { len: d, cha: i } = e; let l = 0; let o = 0; for (;l < d;)r === 'down' ? (n[a + o] = `${l}-${i}`, l++, o += 10) : r === 'right' && (n[a + l] = `${l}-${i}`, l++); t.push(e); } return i; }, receiveAttack: (e, t) => { let r = ''; if (o = [a, n, d, i, l], t[e] === null)t[e] = 'O', r = !0; else if (t[e] === 'O')r = !1; else if (/X/.test(t[e]))r = !1; else { const a = o.filter((a) => t[e].split('-')[1] === a.cha); const n = t[e].split('-')[0]; t[e] += 'X', a[0].hit(n), r = !0; } return r; }, allSunk: () => o.every((e) => e.isSunk()), ships: o, shipName: (t) => e[t.cha], placedShips: t, data: s,
    };
  }; const i = (e, t) => ({ attack: (e, t, a) => e.receiveAttack(t, a), name: e, board: t }); const l = d(); const o = d(); const s = i('player', l); const c = i('computer', o); document.getElementById('submit').addEventListener('click', () => { const { ship: e, position: t, direction: a } = n.getPlacement(); const r = l.ships.filter((t) => t.cha === e); const d = l.placeShip(r[0], parseInt(t), l.data, a); n.displayBoard(l.data, 'playerBoard'), n.showMessage(d); let i = '<ol>'; l.placedShips.forEach((e) => { i += `<li>${l.shipName(e)}</li>`; }), i += '</ol>', document.getElementById('mid-section').innerHTML = i; }); const u = () => { const e = Math.floor(100 * Math.random()); if (c.attack(l, e, l.data)) return n.displayBoard(l.data, 'playerBoard'), l.allSunk() ? (n.showMessage('Computer WINS'), 0) : 0; u(); }; document.getElementById('start').addEventListener('click', () => { l.placedShips.length < 5 ? n.showMessage('finish placing ships') : (document.getElementById('ship-table-container').setAttribute('class', 'hidden'), document.getElementById('start').setAttribute('class', 'hidden'), document.getElementById('reset').classList.toggle('hidden'), (() => { for (let e = 0; e < 100; e++)document.getElementById(`${e}`).addEventListener('click', () => { if (s.attack(o, e, o.data)) { if (o.data[e] === 'O' ? document.getElementById(`${e}`).innerText = 'O' : /X/.test(o.data[e]) && (document.getElementById(`${e}`).innerText = 'X'), o.allSunk()) return n.showMessage('Player WINS'), 0; u(); } }); })()); }); n.displayBoard(l.data, 'playerBoard'), n.displayBoard(o.data, 'computerBoard'), (() => { const { ships: [e, t, a, r, d] } = o; [[[e, 0, o.data, 'down'], [t, 2, o.data, 'right'], [a, 7, o.data, 'down'], [r, 41, o.data, 'right'], [d, 70, o.data, 'right']], [[e, 0, o.data, 'down'], [t, 2, o.data, 'down'], [a, 3, o.data, 'down'], [r, 4, o.data, 'down'], [d, 5, o.data, 'down']], [[e, 9, o.data, 'down'], [t, 2, o.data, 'right'], [a, 30, o.data, 'down'], [r, 44, o.data, 'right'], [d, 55, o.data, 'down']]][Math.floor(3 * Math.random())].forEach((e) => { o.placeShip(...e), n.displayBoard(o.data, 'computerBoard'); }); })();
}]));
